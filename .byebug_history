quit
match_data
quit
@pattern
req.url
match_data
quit
req.url
@pattern
match_data
c
quit
@pattern
exit
req.url.class
req.url
c
match_data
quit
@pattern.match(req.url)
req.url
req.ur
@pattern.match(@pattern.to_s)
@pattern.class
Regexp.new '/users/(?<id>\d+)'
regex.match("/users/42")
m = regex.match("/users/42")
regex
@pattern
match_data.names
match_data
c
quit
match_data
c
quit
@pattern.to_s
@pattern
c
exit
n
match_data
n
regex
n
@pattern
quit
match_data = Regexp.new '#{@pattern}'
match_data = Regexp.new '#{pattern}'
pattern
quit
routes.instance_eval(&proc)
routes
quit
proc
&proc
quit
res.pattern
res
@action_name
req
req.controller_class
DummyController.new
String.new
@controller_class.class
@controller_class
@controller_class.new
@controller_class
quit
controller_class
req.path
req
quit
req
quit
proc.call
&proc
quit
yield
proc.call
prc.call
quit
res.status
req.status
req
quit
req.path
req.route
req
@routes.first.to_s
@routes.first
@routes
req.path
req
subject
req.route
req
quit
 router.get Regexp.new("^/users$"), ControllerBase, :index
quit
qui
 router.get Regexp.new("^/users$"), ControllerBase, :index
quit
router.get Regexp.new("^/users$"), ControllerBase, :index
router
quit
define_method(http_method) {|pattern,method,controller_class,action_name| add_route }
quit
req.request_method == index_route.http_method.to_s.upcase
req.request_method == index_route.http_method
req.request_method
req
index_route.http_method == req.request
@index_route
@index_route.http_method == req.request
index_route.pattern =~ req.path
index_route.pattern
req.path
index_route.pattern =~ req.path
index_route.http_method
index_route.pattern
pattern
@pattern
index_route.matches?(req)
index_route
quit
index_route
req.path
req
quit
req.request_method
req.path
req
re
quit
req
quit
req
quit
action_name
controller_class
http_method
pattern
quit
c
content
quit
session
content
file_content
path
quit
path
content
quit
@cookie.to_json
res
quit
@cookie['xyz']
@cookie
c
quit
JSON.parse req.cookies['_rails_lite_app']
req.cookies['_rails_lite_app']
req
quit
req.cookies['_rails_lite_app'].to_json
_/.to_json
req.cookies['_rails_lite_app']
a['xyz']
a
a = req.cookies.to_json
req.cookies.to_json
req.cookies
quit
s = self.class.to_s
s.type
s.class
s = self.class
self.class.underscore
self.class
self.name
self
quit
index
template_name
quit
exit
req.env
req
req['Content-Length']
res['Content-Length']
res['Content-Length')
res.content_length
res
req
quit
@res.keys
@res['Location']
@res.location
@res['Status']
@res['status']
@res.status
@res
quit
@res.header
quit
@res.body.concat("#{content}")
content
@res.body
@res.content
quit
exit
@res.body
@res
quit
exit
@res['content_type']
content_type
